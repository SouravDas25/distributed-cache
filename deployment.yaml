apiVersion: apps/v1
kind: Deployment
metadata:
    name: ihs-master-deploy
    labels:
        type: restapi
spec:
    selector:
        matchLabels:
            app: ihs-master
    replicas: 1
    template:
        metadata:
            name: ihs-master-tmpl
            labels:
                app: ihs-master
        spec:
            containers:
                -   name: ihs-master
                    image: ihs-master:latest
                    imagePullPolicy: IfNotPresent
                    ports:
                        -   containerPort: 8080
                    env:
                        -   name: PORT
                            value: "8080"
                        -   name: CACHE_SIZE
                            value: "2"
                        -   name: MASTER_NODE
                            value: "true"
                        -   name: AUTOSCALER_TYPE
                            value: "K8S"
                    readinessProbe:
                        initialDelaySeconds: 5
                        periodSeconds: 5
                        httpGet:
                            path: /
                            port: 8080
            serviceAccountName: k8s-api-access
---
# services.yaml
apiVersion: v1
kind: Service
metadata:
    name: ihs-master-svc
spec:
    type: LoadBalancer
    selector:
        app: ihs-master
    ports:
        -   protocol: "TCP"
            port: 8000
            targetPort: 8080


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: ihs-datanode
    labels:
        type: restapi
spec:
    serviceName: "ihs-datanode"
    selector:
        matchLabels:
            app: ihs-datanode
    replicas: 1
    template:
        metadata:
            name: ihs-datanode-tmpl
            labels:
                app: ihs-datanode
        spec:
            containers:
                -   name: ihs-datanode
                    image: ihs-datanode:latest
                    imagePullPolicy: IfNotPresent
                    resources:
                        requests:
                            memory: 32Mi
                        limits:
                            memory: 256Mi
                    ports:
                        -   containerPort: 8080
                    env:
                        -   name: PORT
                            value: "8080"
                        -   name: MASTER_NODE_URL
                            value: "http://ihs-master-svc:8000"
                        -   name: CF_INSTANCE_INDEX
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
                        -   name: VCAP_APPLICATION
                            value: >
                                {
                                    "application_name": "datanode-$(CF_INSTANCE_INDEX)",
                                    "application_uris": [
                                        "http://ihs-datanode-$(CF_INSTANCE_INDEX).ihs-datanode.default.svc.cluster.local:8080"
                                    ],
                                    "application_id": "node-$(CF_INSTANCE_INDEX)"
                                }

---
# services.yaml
apiVersion: v1
kind: Service
metadata:
    name: ihs-datanode
spec:
    clusterIP: "None"
    selector:
        app: ihs-datanode
    ports:
        -   protocol: "TCP"
            port: 8080
            targetPort: 8080
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules:
- apiGroups: ["*"]
  resources: ["statefulsets","pods", "statefulsets/status", "statefulsets.apps", "statefulsets/scale"]
  verbs: ["get", "patch", "*", "update", "patch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-api-access
  namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:
- kind: ServiceAccount
  name: k8s-api-access
  namespace: default
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io
